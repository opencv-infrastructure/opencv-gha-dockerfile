import argparse
import os
import re
import sys


parser = argparse.ArgumentParser(description='Check warnings during a build.')
parser.add_argument('-f','--file_path', help='Path to the log file.', default='build-log.txt')
args = parser.parse_args()

warning_matcher = re.compile(r'.*warning[: ].*', re.I | re.S)
supression_list = [
    'WARNING:[CXX5106]', # warning is generated by gradle and AGP
    'WARNING:[CXX5202]', # warning is generated by gradle and AGP, as each arch is built independently
    'WARNING: [CXX5106]', # NDK 27 NDK was located by using ndk.dir property.
    'WARNING: [CXX5202]', # This app only has 32-bit
    '--illegal-access=permit; support was removed in 17.0', # OpenJDK warning not related to build
    'warning: section flags ignored on section redeclaration', # x86 32-bit warning in jpeg-turbo
    'warning: [removal] finalize() in Object has been deprecated and marked for removal', # https://github.com/opencv/opencv/issues/22260
]
warnings = 0

def warnings_count(file_path):
    global warnings
    for line in open(file_path):
        for match in re.finditer(warning_matcher, line):
            if match.group(0) is not None:
                match_str = str(match.group(0))
                supressed = False
                for sup in supression_list:
                    if sup in match_str:
                        supressed = True
                        break
                if not supressed:
                    print(match_str)
                    warnings += 1
    return warnings

def warnings_exit_code():
    if warnings != 0:
        print("Build has %d warnings." % warnings)
        sys.exit(1)
    else:
        print("Build does not have warnings.")
        sys.exit(0)


if __name__ == '__main__':
    warnings_count(args.file_path)
    warnings_exit_code()
